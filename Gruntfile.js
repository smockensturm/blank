module.exports = function(grunt) {
	grunt.initConfig({
			modernizr: {
				{
				  "parseFiles": true,
				  "customTests": [],
				  "devFile": "js/lib/modernizr-dev.js",
				  "outputFile": "js/lib/modernizr-output.js",
				  "tests": [
				    "ambientlight",
				    "applicationcache",
				    "audio",
				    "battery",
				    "blob",
				    "canvas",
				    "canvastext",
				    "contenteditable",
				    "contextmenu",
				    "cookies",
				    "cors",
				    "crypto",
				    "custom-protocol-handler",
				    "customevent",
				    "dart",
				    "dataview-api",
				    "emoji",
				    "eventlistener",
				    "exif-orientation",
				    "flash",
				    "forcetouch",
				    "fullscreen-api",
				    "gamepad",
				    "geolocation",
				    "hashchange",
				    "hiddenscroll",
				    "history",
				    "htmlimports",
				    "ie8compat",
				    "indexeddb",
				    "indexeddbblob",
				    "input",
				    "inputsearchevent",
				    "inputtypes",
				    "intl",
				    "json",
				    "ligatures",
				    "lists-reversed",
				    "mathml",
				    "notification",
				    "pagevisibility-api",
				    "performance",
				    "pointerevents",
				    "pointerlock-api",
				    "postmessage",
				    "proximity",
				    "queryselector",
				    "quota-management-api",
				    "requestanimationframe",
				    "serviceworker",
				    "svg",
				    "templatestrings",
				    "touchevents",
				    "typed-arrays",
				    "unicode-range",
				    "unicode",
				    "userdata",
				    "vibration",
				    "video",
				    "vml",
				    "web-intents",
				    "webanimations",
				    "webgl",
				    "websockets",
				    "xdomainrequest",
				    "a/download",
				    "audio/loop",
				    "audio/preload",
				    "audio/webaudio",
				    "battery/lowbattery",
				    "canvas/blending",
				    "canvas/todataurl",
				    "canvas/winding",
				    "crypto/getrandomvalues",
				    "css/all",
				    "css/animations",
				    "css/appearance",
				    "css/backdropfilter",
				    "css/backgroundblendmode",
				    "css/backgroundcliptext",
				    "css/backgroundposition-shorthand",
				    "css/backgroundposition-xy",
				    "css/backgroundrepeat",
				    "css/backgroundsize",
				    "css/backgroundsizecover",
				    "css/borderimage",
				    "css/borderradius",
				    "css/boxshadow",
				    "css/boxsizing",
				    "css/calc",
				    "css/checked",
				    "css/chunit",
				    "css/columns",
				    "css/cubicbezierrange",
				    "css/displayrunin",
				    "css/displaytable",
				    "css/ellipsis",
				    "css/escape",
				    "css/exunit",
				    "css/filters",
				    "css/flexbox",
				    "css/flexboxlegacy",
				    "css/flexboxtweener",
				    "css/flexwrap",
				    "css/fontface",
				    "css/generatedcontent",
				    "css/gradients",
				    "css/hairline",
				    "css/hsla",
				    "css/hyphens",
				    "css/invalid",
				    "css/lastchild",
				    "css/mask",
				    "css/mediaqueries",
				    "css/multiplebgs",
				    "css/nthchild",
				    "css/objectfit",
				    "css/opacity",
				    "css/overflow-scrolling",
				    "css/pointerevents",
				    "css/positionsticky",
				    "css/pseudoanimations",
				    "css/pseudotransitions",
				    "css/reflections",
				    "css/regions",
				    "css/remunit",
				    "css/resize",
				    "css/rgba",
				    "css/scrollbars",
				    "css/scrollsnappoints",
				    "css/shapes",
				    "css/siblinggeneral",
				    "css/subpixelfont",
				    "css/supports",
				    "css/target",
				    "css/textalignlast",
				    "css/textshadow",
				    "css/transforms",
				    "css/transforms3d",
				    "css/transformstylepreserve3d",
				    "css/transitions",
				    "css/userselect",
				    "css/valid",
				    "css/vhunit",
				    "css/vmaxunit",
				    "css/vminunit",
				    "css/vwunit",
				    "css/will-change",
				    "css/wrapflow",
				    "dom/classlist",
				    "dom/createElement-attrs",
				    "dom/dataset",
				    "dom/documentfragment",
				    "dom/hidden",
				    "dom/microdata",
				    "dom/mutationObserver",
				    "elem/bdi",
				    "elem/datalist",
				    "elem/details",
				    "elem/output",
				    "elem/picture",
				    "elem/progress-meter",
				    "elem/ruby",
				    "elem/template",
				    "elem/time",
				    "elem/track",
				    "elem/unknown",
				    "es5/array",
				    "es5/date",
				    "es5/function",
				    "es5/object",
				    "es5/specification",
				    "es5/strictmode",
				    "es5/string",
				    "es5/syntax",
				    "es5/undefined",
				    "es6/array",
				    "es6/collections",
				    "es6/contains",
				    "es6/generators",
				    "es6/math",
				    "es6/number",
				    "es6/object",
				    "es6/promises",
				    "es6/string",
				    "event/deviceorientation-motion",
				    "event/oninput",
				    "file/api",
				    "file/filesystem",
				    "forms/capture",
				    "forms/fileinput",
				    "forms/fileinputdirectory",
				    "forms/formattribute",
				    "forms/inputnumber-l10n",
				    "forms/placeholder",
				    "forms/requestautocomplete",
				    "forms/validation",
				    "iframe/sandbox",
				    "iframe/seamless",
				    "iframe/srcdoc",
				    "img/apng",
				    "img/crossorigin",
				    "img/jpeg2000",
				    "img/jpegxr",
				    "img/sizes",
				    "img/srcset",
				    "img/webp-alpha",
				    "img/webp-animation",
				    "img/webp-lossless",
				    "img/webp",
				    "input/formaction",
				    "input/formenctype",
				    "input/formmethod",
				    "input/formtarget",
				    "network/beacon",
				    "network/connection",
				    "network/eventsource",
				    "network/fetch",
				    "network/xhr-responsetype-arraybuffer",
				    "network/xhr-responsetype-blob",
				    "network/xhr-responsetype-document",
				    "network/xhr-responsetype-json",
				    "network/xhr-responsetype-text",
				    "network/xhr-responsetype",
				    "network/xhr2",
				    "script/async",
				    "script/defer",
				    "speech/speech-recognition",
				    "speech/speech-synthesis",
				    "storage/localstorage",
				    "storage/sessionstorage",
				    "storage/websqldatabase",
				    "style/scoped",
				    "svg/asimg",
				    "svg/clippaths",
				    "svg/filters",
				    "svg/foreignobject",
				    "svg/inline",
				    "svg/smil",
				    "textarea/maxlength",
				    "url/bloburls",
				    "url/data-uri",
				    "url/parser",
				    "video/autoplay",
				    "video/loop",
				    "video/preload",
				    "webgl/extensions",
				    "webrtc/datachannel",
				    "webrtc/getusermedia",
				    "webrtc/peerconnection",
				    "websockets/binary",
				    "window/atob-btoa",
				    "window/framed",
				    "window/matchmedia",
				    "workers/blobworkers",
				    "workers/dataworkers",
				    "workers/sharedworkers",
				    "workers/transferables",
				    "workers/webworkers"
				  ],
				  "extensibility": [
				    "domPrefixes",
				    "prefixes",
				    "addTest",
				    "atRule",
				    "hasEvent",
				    "mq",
				    "prefixed",
				    "prefixedCSS",
				    "prefixedCSSValue",
				    "testAllProps",
				    "testProp",
				    "testStyles",
				    "html5shiv",
				    "setClasses"
				  ],
				  "uglify": true
				}
			},
    	sass:{
        	options:{
        	    sourceMap: false,
        	    precision: 4,
        	    outputStyle: 'compact'
			},
	        dist:{
	            files:{
		            'css/blank.css': ['css/sass/style.scss']
		        }
			}
		},

		uglify: {
			options: {
				mangle: false, // {except: ['jQuery']}
				beautify: true
    		},
			scripts: {
				files: {
					'js/blank.js': ['js/lib/*.js']
        		}
    		}
  		},

		autoprefixer: {
            dist: {
                files: {
                    'css/blank.css': ['css/blank.css']
                }
            }
        },



		watch:{
			styles:{
				files: ['css/sass/*.scss'],
				tasks: ['sass','autoprefixer']
    		},
    		scripts:{
	    		files: ['js/lib/*.js'],
	    		tasks: ['uglify']
    		}
  		}

	});

	grunt.registerTask('default', ['modernizr', 'sass', 'autoprefixer', 'uglify', 'watch']);
	grunt.loadNpmTasks('grunt-modernizr');
	grunt.loadNpmTasks('grunt-sass');
	grunt.loadNpmTasks('grunt-autoprefixer');
	grunt.loadNpmTasks('grunt-contrib-uglify');
	grunt.loadNpmTasks('grunt-contrib-watch');

}
